{"version":3,"sources":["../source/grade.test.js"],"names":["describe","it","expect","to","be","undefined","unit","deep","equal","thrower","throw","_gradation","slice","should","granularity","splice"],"mappings":";;AAAA;;;;AACA;;;;AAEAA,SAAS,OAAT,EAAkB,YAClB;AACCC,IAAG,uDAAH,EAA4D,YAC5D;AACCC,SAAO,qBAAM,CAAN,EAAS,IAAT,EAAe,CAAC,aAAD,CAAf,wBAAP,EAAmDC,EAAnD,CAAsDC,EAAtD,CAAyDC,SAAzD;AACA,EAHD;;AAKAJ,IAAG,4DAAH,EAAiE,YACjE;AACCC,SAAO,qBAAM,CAAN,EAAS,IAAT,EAAe,CAAC,QAAD,CAAf,EAA2B,CAAC,EAAEI,MAAM,QAAR,EAAD,CAA3B,CAAP,EAAyDH,EAAzD,CAA4DI,IAA5D,CAAiEC,KAAjE,CAAuE,EAAEF,MAAM,QAAR,EAAvE;;AAEA,MAAMG,UAAU,SAAVA,OAAU;AAAA,UAAM,qBAAM,CAAN,EAAS,IAAT,EAAe,CAAC,QAAD,EAAW,QAAX,CAAf,EAAqC,CAAC,EAAEH,MAAM,QAAR,EAAD,EAAqB,EAAEA,MAAM,QAAR,EAArB,CAArC,CAAN;AAAA,GAAhB;AACAJ,SAAOO,OAAP,EAAgBN,EAAhB,CAAmBO,KAAnB,CAAyB,sIAAzB;AACA,EAND;;AAQAT,IAAG,4EAAH,EAAiF,YACjF;AACC,MAAMU,aAAa,sBAAUC,KAAV,EAAnB;;AAEAD,aAAW,CAAX,EAAcL,IAAd,CAAmBO,MAAnB,CAA0BL,KAA1B,CAAgC,QAAhC;AACAG,aAAW,CAAX,EAAcG,WAAd,GAA4B,CAA5B;;AAEA,uBAAM,IAAN,EAAY,IAAZ,EAAkB,CAAC,KAAD,EAAQ,QAAR,CAAlB,EAAqCH,UAArC,EAAiDL,IAAjD,CAAsDO,MAAtD,CAA6DL,KAA7D,CAAmE,KAAnE;;AAEA;;AAEAG,aAAWI,MAAX,CAAkB,CAAlB,EAAqB,CAArB;;AAEA,uBAAM,IAAN,EAAY,IAAZ,EAAkB,CAAC,KAAD,EAAQ,QAAR,CAAlB,EAAqCJ,UAArC,EAAiDL,IAAjD,CAAsDO,MAAtD,CAA6DL,KAA7D,CAAmE,QAAnE;AACA,EAdD;AAeA,CA9BD","file":"grade.test.js","sourcesContent":["import grade from '../source/grade'\r\nimport { canonical } from '../source/gradation'\r\n\r\ndescribe('grade', function()\r\n{\r\n\tit('should return nothing if no time units are applicable', function()\r\n\t{\r\n\t\texpect(grade(0, null, ['femtosecond'], canonical)).to.be.undefined\r\n\t})\r\n\r\n\tit('should throw if a non-first step does not have a threshold', function()\r\n\t{\r\n\t\texpect(grade(2, null, ['second'], [{ unit: 'second' }])).to.deep.equal({ unit: 'second' })\r\n\r\n\t\tconst thrower = () => grade(2, null, ['second', 'minute'], [{ unit: 'second' }, { unit: 'minute' }])\r\n\t\texpect(thrower).to.throw('Each step of a gradation must have a threshold defined except for the first one. Got \"undefined\", undefined. Step: {\"unit\":\"minute\"}')\r\n\t})\r\n\r\n\tit('should fall back to previous grading scale step if granularity is too high', function()\r\n\t{\r\n\t\tconst _gradation = canonical.slice()\r\n\r\n\t\t_gradation[1].unit.should.equal('second')\r\n\t\t_gradation[1].granularity = 3\r\n\r\n\t\tgrade(1.49, null, ['now', 'second'], _gradation).unit.should.equal('now')\r\n\r\n\t\t// And if there's no previous step, then use the current one.\r\n\r\n\t\t_gradation.splice(0, 1)\r\n\r\n\t\tgrade(1.49, null, ['now', 'second'], _gradation).unit.should.equal('second')\r\n\t})\r\n})"]}